" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

" $ mkdir -p ~/.vim/bundle
" $ git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
if has('vim_starting')
  set nocompatible " Be iMproved
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" ===== color =====
NeoBundle 'tomasr/molokai'

" ===== syntax =====
NeoBundleLazy 'endel/actionscript.vim', {
      \  'autoload': {'filetypes': ['actionscript']}
      \}

" ===== utils =====
NeoBundle 'Lokaltog/vim-powerline'
NeoBundle 'sudo.vim'
NeoBundle 't9md/vim-quickhl'
NeoBundle 'thinca/vim-ref'
NeoBundle 'camelcasemotion'
" NeoBundle "scrooloose/syntastic"

" ===== run utils =====
NeoBundle 'thinca/vim-quickrun'
NeoBundle 'Shougo/vimproc', {
      \ 'build' : {
      \     'windows' : 'make -f make_mingw32.mak',
      \     'cygwin' : 'make -f make_cygwin.mak',
      \     'mac' : 'make -f make_mac.mak',
      \     'unix' : 'make -f make_unix.mak',
      \    },
      \ }

" ===== completion =====
if has('lua')
  NeoBundle 'Shougo/neocomplete.vim'
else
  NeoBundle 'Shougo/neocomplcache.vim'
endif

" ===== snippet =====
NeoBundle 'Shougo/neosnippet.vim'
NeoBundle 'Shougo/neosnippet-snippets'

" ===== search =====
NeoBundleLazy 'wincent/Command-T', {
      \  'autoload': {
      \    'commands': ["CommandT", "CommandTBuffer"]
      \  }
      \}
nnoremap <silent> <Leader>t :CommandT<CR>
" nnoremap <silent> <Leader>b :CommandTBuffer<CR>

" ===== rails =====
NeoBundleLazy 'tpope/vim-rails', {
      \ 'autoload' : {'filetypes': ['ruby', 'eruby', 'haml']},
      \}
NeoBundleLazy 'basyura/unite-rails', {
      \ 'depends' : ['Shougo/unite.vim'],
      \ 'autoload' : {'filetypes': ['ruby', 'eruby', 'haml']}
      \}

" ===== c/c++ =====
NeoBundleLazy 'osyo-manga/vim-marching', {
      \  'depends': ['Shougo/neocomplete.vim', 'Shougo/vimproc', 'osyo-manga/vim-reunions'],
      \  'autoload': {'filetypes': ['c', 'cpp']}
      \}

" ===== twig =====
NeoBundleLazy 'evidens/vim-twig', {
      \ 'autoload': {'filetypes': ['twig']}
      \}

" ===== coffee =====
NeoBundleLazy 'kchmck/vim-coffee-script', {
      \ 'autoload': {'filetypes': ['coffee']}
      \ }

" ===== scala =====
NeoBundleLazy 'derekwyatt/vim-scala', {
      \ 'autoload': {'filetypes': ['scala']}
      \ }

" ===== haskell =====
NeoBundleLazy 'kana/vim-filetype-haskell', {
      \ 'autoload': {'filetypes': ['haskell']}
      \ }

" ===== unite =====
NeoBundleLazy 'Shougo/unite.vim', {
      \  'autoload': {
      \    'commands': ["Unite", "UniteWithBufferDir", "UniteWithCurrentDir", "UniteWithCursorWord"]
      \  }
      \}
NeoBundleLazy 'Shougo/unite-outline', {
      \ 'depends': ['Shougo/unite.vim']
      \}
NeoBundleLazy 'tsukkee/unite-tag', {
      \ 'depends': ['Shougo/unite.vim']
      \}
"NeoBundle 'tsukkee/unite-help'
"NeoBundle 'choplin/unite-vim_hacks'
"NeoBundle 'Sixeight/unite-grep'
"NeoBundle 'thinca/vim-unite-history'

call neobundle#end()
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

